components:
  schemas:
    id:
      description: フォームのID
      type: integer
      format: int64
      minimum: 0
      example: 0
    title:
      description: フォームの名前
      type: string
      example: お問い合わせフォーム
    description:
      description: フォームの説明
      type: string
      nullable: true
      example: このフォームはお問い合わせをする際にご回答いただくフォームです。
    start_at:
      description: 回答の受付を開始する日時
      type: string
      format: date-time
    end_at:
      description: 回答の受付を終了する日時
      type: string
      format: date-time
    response_period:
      description: 回答可能期間
      type: object
      nullable: true
      properties:
        start_at:
          $ref: "#/components/schemas/start_at"
        end_at:
          $ref: "#/components/schemas/end_at"
    webhook_url:
      description: webhookのURL
      type: string
    settings:
      description: フォームの設定
      type: object
      properties:
        response_period:
          $ref: "#/components/schemas/response_period"
        webhook_url:
          $ref: "#/components/schemas/webhook_url"
    created_at:
      description: フォームの作成日時
      type: string
      format: date-time
    updated_at:
      description: フォームの最終更新日時
      type: string
      format: date-time
    metadata:
      description: フォームのメタデータ
      type: object
      properties:
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_at:
          $ref: "#/components/schemas/updated_at"
    question_id:
      description: 質問のID
      type: integer
      minimum: 0
      example: 0
    question_title:
      description: 質問のタイトル
      type: string
      example: お問い合わせフォーム
    question_description:
      description: 質問の説明
      type: string
      example: 運営に問い合わせる内容を具体的に記述してください。
    question_type:
      description: |
        質問形式を定義する。

        | ENUM     | 説明         | 
        | -------- | ------------| 
        | TEXT     | 自由記述     | 
        | MULTIPLE | 複数選択     | 
        | SINGLE   | 単一選択     |
      type: string
      enum:
        - TEXT
        - MULTIPLE
        - SINGLE
      example: TEXT
    is_required:
      description: |
        質問に対する解答を必須にする。
        デフォルトはfalseで、trueだと有効になる。
      type: boolean
      example: false
    question:
      description: 質問
      type: object
      properties:
        question_id:
          $ref: "#/components/schemas/question_id"
        question_title:
          $ref: "#/components/schemas/question_title"
        question_description:
          $ref: "#/components/schemas/question_description"
        question_type:
          $ref: "#/components/schemas/question_type"
        is_required:
          $ref: "#/components/schemas/is_required"
    questions:
      description: 質問の配列
      type: array
      uniqueItems: true
      minItems: 1
      items:
        $ref: "#/components/schemas/question"
    answer:
      description: 質問に対する回答
      type: object
      properties:
        question_id:
          $ref: "#/components/schemas/question_id"
        answer:
          type: string
          example: 整地鯖にアクセスできません。どうしたらいいですか。
    kind_of_labels:
      description: |
        ラベルの種類
        | 名前         | 説明                                         | 
        | ------------ | --------------------------------------------| 
        | FORM         | フォームに対してつけられるラベル            | 
        | FORM_ANSWERS | フォームについた回答に対してつけられるラベル |
      type: string
      enum:
        - FORM
        - FORM_ANSWERS
    form_label_id:
      description: フォームラベルを一意に定めるためのID
      type: integer
      format: int64
      minimum: 0
    form_label_name:
      description: フォームに対してつけるラベルの名前
      type: string
      example: 常設フォーム
    form_label_description:
      description: フォームに対してつけるラベルの説明
      type: string
      example: このラベルがついているフォームは、常に設置されているフォームです。
    comment_id:
      description: コメントを一意に定めるID
      type: integer
      format: int64
      minimum: 0
    comment_content:
      description: コメントの内容
      type: string
      example: テストコメント
    comment:
      description: コメント
      type: object
      properties:
        id:
          readOnly: true
          allOf:
            - $ref: "#/components/schemas/comment_id"
        content:
          $ref: "#/components/schemas/comment_content"
    comment_for_edit:
      description: コメント
      type: object
      properties:
        id:
          $ref: "#/components/schemas/comment_id"
        content:
          $ref: "#/components/schemas/comment_content"
